name: Deploy Admin Frontend to DigitalOcean

on:
  push:
    branches:
      - main   # deploy when you push to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./
        run: npm ci

      - name: Build admin frontend
        working-directory: ./
        env:
          VITE_API_BASE: ${{ secrets.VITE_API_BASE }}
        run: npm run build

      - name: Copy files to DigitalOcean
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          source: "dist/*"
          target: "~/admin-frontend"
          strip_components: 1

      - name: Deploy admin frontend on DigitalOcean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            # Update system packages
            sudo apt-get update

            # Install Nginx if not present
            if ! command -v nginx >/dev/null 2>&1; then
              sudo apt-get install -y nginx
            fi

            # Install Certbot if not present
            if ! command -v certbot >/dev/null 2>&1; then
              sudo apt-get install -y certbot python3-certbot-nginx
            fi

            # Create admin frontend directory if it doesn't exist
            sudo mkdir -p /var/www/admin.bengalcodingacademy.com

            # Copy built files to admin web root
            sudo cp -r ~/admin-frontend/* /var/www/admin.bengalcodingacademy.com/
            sudo chown -R www-data:www-data /var/www/admin.bengalcodingacademy.com
            sudo chmod -R 755 /var/www/admin.bengalcodingacademy.com

            # Configure Nginx for admin frontend
            sudo tee /etc/nginx/sites-available/admin.bengalcodingacademy.com <<EOL
            server {
                listen 80;
                server_name admin.bengalcodingacademy.com;

                # Security headers
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

                # Gzip compression
                gzip on;
                gzip_vary on;
                gzip_min_length 1024;
                gzip_proxied expired no-cache no-store private auth;
                gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

                # Root directory
                root /var/www/admin.bengalcodingacademy.com;
                index index.html;

                # Handle client-side routing
                location / {
                    try_files \$uri \$uri/ /index.html;
                }

                # Cache static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                    try_files \$uri =404;
                }

                # Cache HTML files for shorter period
                location ~* \.html$ {
                    expires 1h;
                    add_header Cache-Control "public";
                    try_files \$uri =404;
                }

                # Security: Deny access to hidden files
                location ~ /\. {
                    deny all;
                }

                # Additional security for admin panel
                location /admin {
                    # Add extra security headers for admin
                    add_header X-Content-Type-Options "nosniff" always;
                    add_header X-Frame-Options "DENY" always;
                    add_header X-XSS-Protection "1; mode=block" always;
                }
            }
            EOL

            # Enable the site
            sudo ln -sf /etc/nginx/sites-available/admin.bengalcodingacademy.com /etc/nginx/sites-enabled/

            # Fix any existing Nginx configuration issues
            echo "Fixing Nginx configuration issues..."
            sudo sed -i 's/gzip_proxied expired no-cache no-store private must-revalidate auth;/gzip_proxied expired no-cache no-store private auth;/' /etc/nginx/sites-enabled/*.com 2>/dev/null || true
            
            # Ensure main website has proper SSL configuration
            if [ -f "/etc/nginx/sites-enabled/bengalcodingacademy.com" ]; then
                echo "Fixing main website SSL configuration..."
                # Check if SSL is configured, if not, configure it
                if ! grep -q "listen 443" /etc/nginx/sites-enabled/bengalcodingacademy.com; then
                    echo "Adding SSL configuration to main website..."
                    sudo certbot --nginx -d bengalcodingacademy.com -d www.bengalcodingacademy.com --non-interactive --agree-tos --email admin@bengalcodingacademy.com || echo "SSL configuration failed for main site"
                fi
            fi

            # Test Nginx configuration
            echo "Testing Nginx configuration..."
            if ! sudo nginx -t; then
                echo "Nginx configuration test failed. Attempting to fix..."
                # Try to fix common issues
                sudo sed -i 's/must-revalidate auth/auth/g' /etc/nginx/sites-enabled/*.com 2>/dev/null || true
                sudo nginx -t
            fi

            # Start/restart Nginx
            echo "Restarting Nginx..."
            sudo systemctl restart nginx
            sudo systemctl enable nginx

            # Wait a moment for Nginx to start
            sleep 5

            # Check if Nginx is running
            if ! sudo systemctl is-active --quiet nginx; then
                echo "Nginx failed to start. Checking logs..."
                sudo journalctl -u nginx --no-pager -l
                exit 1
            fi

            # Configure SSL if certificates exist
            echo "Checking for SSL certificates..."
            if [ -f "/etc/letsencrypt/live/admin.bengalcodingacademy.com/fullchain.pem" ]; then
                echo "SSL certificate found. Configuring HTTPS..."
                sudo certbot --nginx -d admin.bengalcodingacademy.com --non-interactive --agree-tos --email admin@bengalcodingacademy.com || echo "SSL configuration failed, continuing with HTTP only"
            else
                echo "No SSL certificate found for admin.bengalcodingacademy.com"
            fi

            # Final verification
            echo "=== Final Verification ==="
            sudo systemctl status nginx --no-pager
            
            # Test if sites are accessible
            echo "Testing site accessibility..."
            curl -I http://admin.bengalcodingacademy.com || echo "HTTP test failed"
            curl -I https://admin.bengalcodingacademy.com || echo "HTTPS test failed"
            curl -I http://www.bengalcodingacademy.com || echo "Main site HTTP test failed"
            curl -I https://www.bengalcodingacademy.com || echo "Main site HTTPS test failed"
            
            echo "=== Deployment Complete ==="
            echo "Admin Frontend: http://admin.bengalcodingacademy.com"
            echo "Admin Frontend (HTTPS): https://admin.bengalcodingacademy.com"
            echo "Main Website: http://www.bengalcodingacademy.com"
            echo "Main Website (HTTPS): https://www.bengalcodingacademy.com"

      - name: Cleanup
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            rm -rf ~/admin-frontend